#include <stdio.h>
#include <stdlib.h>
#include <conio.h> // For getch() and clrscr() (Windows).  Use ncurses.h for Linux
#include <time.h>   // For random number generation

#define ROWS 9
#define COLS 9
#define PASSWORD "2025"

// Function prototypes
void display_personal_screen();
int  verify_password();
void display_menu();
void display_seats(char seats[ROWS][COLS]);
void arrange_seats(char seats[ROWS][COLS]);
void choose_seats(char seats[ROWS][COLS]);
void exit_program();
void clear_screen(); // Function to clear the screen

int main() {
    char seats[ROWS][COLS];
    int  choice;

    srand(time(0)); // Seed the random number generator

    display_personal_screen();

    if (!verify_password()) {
        printf("Authentication failed. Exiting...\n");
        return 1;
    }

    // Initialize seats (e.g., with '-')
    for (int i = 0; i < ROWS; i++) {
        for (int j = 0; j < COLS; j++) {
            seats[i][j] = '-';
        }
    }

    // Randomly reserve 10 seats
    int reserved_count = 0;
    while (reserved_count < 10) {
        int row = rand() % ROWS;
        int col = rand() % COLS;
        if (seats[row][col] == '-') {
            seats[row][col] = '*';
            reserved_count++;
        }
    }

    do {
        clear_screen();
        display_menu();
        printf("Enter your choice: ");
        choice = getch(); // Use getch() to get character input

        switch (choice) {
            case 'a':
                clear_screen();
                display_seats(seats);
                printf("\nPress any key to return to the menu...");
                getch();
                break;
            case 'b':
                clear_screen();
                arrange_seats(seats);
                break;
            case 'c':
                clear_screen();
                choose_seats(seats);
                break;
            case 'd':
                clear_screen();
                exit_program();
                break;
            default:
                printf("\nInvalid choice. Please try again.\n");
                break;
        }
    } while (choice != 'd');

    return 0;
}

// Function implementations will go here (see below)
void display_personal_screen() {
    //  Replace this with your personal screen (at least 20 lines)
    printf("*****************************************\n");
    printf("* *\n");
    printf("* Welcome to H1.29         *\n");
    printf("* *\n");
    printf("* Hello *\n");
    printf("* *\n");
    printf("* *\n");
    printf("* *\n");
    printf("* *\n");
    printf("* *\n");
    printf("* *\n");
    printf("* *\n");
    printf("* *\n");
    printf("* *\n");
    printf("* *\n");
    printf("* *\n");
    printf("* *\n");
    printf("* *\n");
    printf("* *\n");
    printf("* *\n");
    printf("*****************************************\n");
    printf("\n");
}

int verify_password() {
    char input[5]; // To store the 4-digit password + null terminator
    int  tries = 0;

    while (tries < 3) {
        printf("Enter the 4-digit password: ");
        scanf("%4s", input); // Read up to 4 characters

        if (strcmp(input, PASSWORD) == 0) {
            printf("Password correct. Welcome!\n");
            return 1; // Success
        } else {
            tries++;
            printf("Incorrect password. Try again.\n");
        }
    }

    printf("Too many incorrect attempts.\n");
    return 0; // Failure
}
