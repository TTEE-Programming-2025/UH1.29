#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>
#include <conio.h>  // 用於 getch() 函數

#define MAX_STUDENTS 10

// 學生結構體
typedef struct {
    char name[50];
    int id;
    int math;
    int physics;
    int english;
    float average;
} Student;

Student students[MAX_STUDENTS];  // 學生陣列
int studentCount = 0;            // 當前學生數量

// 函數宣告
void displayWelcomeScreen();
int checkPassword();
void clearScreen();
void displayMainMenu();
void enterGrades();
void displayAllGrades();
void searchStudent();
void displayRanking();
void exitSystem();

int main() {
    // 步驟1：顯示歡迎畫面並檢查密碼
    if (!checkPassword()) {
        return 0;  // 密碼錯誤三次，結束程式
    }
    
    // 步驟2：主選單循環
    char choice;
    do {
        displayMainMenu();
        choice = getch();  // 獲取用戶選擇
        
        switch (tolower(choice)) {
            case 'a':
                enterGrades();
                break;
            case 'b':
                displayAllGrades();
                break;
            case 'c':
                searchStudent();
                break;
            case 'd':
                displayRanking();
                break;
            case 'e':
                exitSystem();
                break;
            default:
                printf("\n無效的選項，請重新選擇！\n");
                printf("按任意鍵繼續...");
                getch();
                break;
        }
    } while (1);  // 無限循環，直到選擇退出
    
    return 0;
}

// 顯示歡迎畫面
void displayWelcomeScreen() {
    clearScreen();
    printf("\n");
    printf("***************************************\n");
    printf("*                                     *\n");
    printf("*      歡迎使用      *\n");
    printf("*                                     *\n");
    printf("*           個人風格畫面             *\n");
    printf("*                                     *\n");
    printf("*   ██████╗ █████╗ ██████╗ ███████╗  *\n");
    printf("*  ██╔════╝██╔══██╗██╔══██╗██╔════╝  *\n");
    printf("*  ██║     ███████║██║  ██║█████╗    *\n");
    printf("*  ██║     ██╔══██║██║  ██║██╔══╝    *\n");
    printf("*  ╚██████╗██║  ██║██████╔╝███████╗  *\n");
    printf("*   ╚═════╝╚═╝  ╚═╝╚═════╝ ╚══════╝  *\n");
    printf("*                                     *\n");
    printf("*                     *\n");
    printf("*                                     *\n");
    printf("***************************************\n");
    printf("\n");
}

// 檢查密碼
int checkPassword() {
    int attempts = 0;
    int password;
    const int correctPassword = 2025;  // 預設密碼
    
    do {
        displayWelcomeScreen();
        printf("請輸入4位數密碼: ");
        if (scanf("%d", &password) != 1) {
            printf("輸入無效，請輸入數字！\n");
            while (getchar() != '\n');  // 清除輸入緩衝區
            attempts++;
            printf("按任意鍵繼續...");
            getch();
            continue;
        }
        
        if (password == correctPassword) {
            printf("\n密碼正確，歡迎使用本系統！\n");
            printf("按任意鍵繼續...");
            getch();
            return 1;  // 密碼正確
        } else {
            attempts++;
            printf("\n密碼錯誤，您還有 %d 次嘗試機會。\n", 3 - attempts);
            printf("按任意鍵繼續...");
            getch();
        }
    } while (attempts < 3);
    
    printf("\n警告：您已連續三次輸入錯誤密碼，系統將關閉！\n");
    return 0;  // 密碼錯誤三次
}

// 清除螢幕
void clearScreen() {
    system("cls");  // Windows 系統
    // system("clear");  // Linux/Mac 系統
}

// 顯示主選單
void displayMainMenu() {
    clearScreen();
    printf("\n");
    printf("------------[Grade System]----------\n");
    printf("| a. Enter student grades         |\n");
    printf("| b. Display student grades       |\n");
    printf("| c. Search for student grades    |\n");
    printf("| d. Grade ranking                |\n");
    printf("| e. Exit system                  |\n");
    printf("------------------------------------\n");
    printf("\n請選擇一個選項 (a-e): ");
}

// 輸入學生成績
void enterGrades() {
    clearScreen();
    printf("\n--- 輸入學生成績 ---\n");
    
    // 獲取學生數量 (5-10)
    int n;
    do {
        printf("請輸入學生人數 (5-10): ");
        if (scanf("%d", &n) != 1) {
            printf("輸入無效，請輸入數字！\n");
            while (getchar() != '\n');  // 清除輸入緩衝區
            continue;
        }
        
        if (n < 5 || n > 10) {
            printf("人數必須在5到10之間！\n");
        }
    } while (n < 5 || n > 10);
    
    // 輸入每個學生的資料
    for (int i = 0; i < n; i++) {
        printf("\n--- 學生 %d ---\n", i + 1);
        
        // 輸入姓名
        printf("姓名: ");
        scanf("%s", students[studentCount].name);
        
        // 輸入學號 (6位數)
        do {
            printf("學號 (6位數字): ");
            if (scanf("%d", &students[studentCount].id) != 1) {
                printf("輸入無效，請輸入數字！\n");
                while (getchar() != '\n');
                continue;
            }
            
            if (students[studentCount].id < 100000 || students[studentCount].id > 999999) {
                printf("學號必須是6位數字！\n");
            }
        } while (students[studentCount].id < 100000 || students[studentCount].id > 999999);
        
        // 輸入數學成績 (0-100)
        do {
            printf("數學成績 (0-100): ");
            if (scanf("%d", &students[studentCount].math) != 1) {
                printf("輸入無效，請輸入數字！\n");
                while (getchar() != '\n');
                continue;
            }
            
            if (students[studentCount].math < 0 || students[studentCount].math > 100) {
                printf("成績必須在0到100之間！\n");
            }
        } while (students[studentCount].math < 0 || students[studentCount].math > 100);
        
        // 輸入物理成績 (0-100)
        do {
            printf("物理成績 (0-100): ");
            if (scanf("%d", &students[studentCount].physics) != 1) {
                printf("輸入無效，請輸入數字！\n");
                while (getchar() != '\n');
                continue;
            }
            
            if (students[studentCount].physics < 0 || students[studentCount].physics > 100) {
                printf("成績必須在0到100之間！\n");
            }
        } while (students[studentCount].physics < 0 || students[studentCount].physics > 100);
        
        // 輸入英文成績 (0-100)
        do {
            printf("英文成績 (0-100): ");
            if (scanf("%d", &students[studentCount].english) != 1) {
                printf("輸入無效，請輸入數字！\n");
                while (getchar() != '\n');
                continue;
            }
            
            if (students[studentCount].english < 0 || students[studentCount].english > 100) {
                printf("成績必須在0到100之間！\n");
            }
        } while (students[studentCount].english < 0 || students[studentCount].english > 100);
        
        // 計算平均成績
        students[studentCount].average = (students[studentCount].math + 
                                         students[studentCount].physics + 
                                         students[studentCount].english) / 3.0;
        
        studentCount++;  // 增加學生計數
    }
    
    printf("\n所有學生資料已輸入完成！\n");
    printf("按任意鍵返回主選單...");
    getch();
}

// 顯示所有學生成績
void displayAllGrades() {
    clearScreen();
    printf("\n--- 所有學生成績 ---\n");
    
    if (studentCount == 0) {
        printf("目前沒有學生資料！\n");
    } else {
        printf("%-10s %-10s %-8s %-8s %-8s %-8s\n", 
               "姓名", "學號", "數學", "物理", "英文", "平均");
        printf("------------------------------------------------\n");
        
        for (int i = 0; i < studentCount; i++) {
            printf("%-10s %-10d %-8d %-8d %-8d %-8.1f\n", 
                   students[i].name, 
                   students[i].id, 
                   students[i].math, 
                   students[i].physics, 
                   students[i].english, 
                   students[i].average);
        }
    }
    
    printf("\n按任意鍵返回主選單...");
    getch();
}

// 搜尋學生
void searchStudent() {
    clearScreen();
    printf("\n--- 搜尋學生成績 ---\n");
    
    if (studentCount == 0) {
        printf("目前沒有學生資料！\n");
        printf("\n按任意鍵返回主選單...");
        getch();
        return;
    }
    
    char searchName[50];
    printf("請輸入要搜尋的學生姓名: ");
    scanf("%s", searchName);
    
    int found = 0;
    for (int i = 0; i < studentCount; i++) {
        if (strcmp(students[i].name, searchName) == 0) {
            printf("\n找到學生資料:\n");
            printf("%-10s %-10s %-8s %-8s %-8s %-8s\n", 
                   "姓名", "學號", "數學", "物理", "英文", "平均");
            printf("------------------------------------------------\n");
            printf("%-10s %-10d %-8d %-8d %-8d %-8.1f\n", 
                   students[i].name, 
                   students[i].id, 
                   students[i].math, 
                   students[i].physics, 
                   students[i].english, 
                   students[i].average);
            found = 1;
            break;
        }
    }
    
    if (!found) {
        printf("\n找不到姓名為 %s 的學生資料！\n", searchName);
    }
    
    printf("\n按任意鍵返回主選單...");
    getch();
}

// 顯示成績排名
void displayRanking() {
    clearScreen();
    printf("\n--- 學生成績排名 ---\n");
    
    if (studentCount == 0) {
        printf("目前沒有學生資料！\n");
        printf("\n按任意鍵返回主選單...");
        getch();
        return;
    }
    
    // 創建一個副本陣列用於排序
    Student sortedStudents[MAX_STUDENTS];
    memcpy(sortedStudents, students, sizeof(students));
    
    // 使用簡單的冒泡排序按平均成績排序
    for (int i = 0; i < studentCount - 1; i++) {
        for (int j = 0; j < studentCount - i - 1; j++) {
            if (sortedStudents[j].average < sortedStudents[j + 1].average) {
                // 交換兩個學生
                Student temp = sortedStudents[j];
                sortedStudents[j] = sortedStudents[j + 1];
                sortedStudents[j + 1] = temp;
            }
        }
    }
    
    // 顯示排名結果
    printf("%-5s %-10s %-10s %-8s\n", "排名", "姓名", "學號", "平均成績");
    printf("--------------------------------\n");
    
    for (int i = 0; i < studentCount; i++) {
        printf("%-5d %-10s %-10d %-8.1f\n", 
               i + 1, 
               sortedStudents[i].name, 
               sortedStudents[i].id, 
               sortedStudents[i].average);
    }
    
    printf("\n按任意鍵返回主選單...");
    getch();
}

// 退出系統
void exitSystem() {
    char confirm;
    do {
        clearScreen();
        printf("\n確定離開？ (y/n): ");
        confirm = tolower(getch());
        
        if (confirm == 'y') {
            printf("\n感謝使用學生成績管理系統，再見！\n");
            exit(0);
        } else if (confirm == 'n') {
            return;  // 返回主選單
        } else {
            printf("\n無效的輸入，請輸入 'y' 或 'n'！\n");
            printf("按任意鍵繼續...");
            getch();
        }
    } while (1);
}
