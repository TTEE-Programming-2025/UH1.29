#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>
#include <conio.h>  // 用於 getch()

#define MAX_STUDENTS 10
#define PASSWORD 2025  // 預設密碼

typedef struct {
    char name[50];
    int id;
    int math;
    int physics;
    int english;
    float average;
} Student;

Student students[MAX_STUDENTS];
int studentCount = 0;

// 函式宣告
void displayWelcomeScreen();
int checkPassword();
void clearScreen();
void displayMainMenu();
int inputIntInRange(const char *prompt, int min, int max);
int isDuplicateID(int id);
void enterGrades();
void displayAllGrades();
void searchStudent();
int compareAverageDesc(const void* a, const void* b);
void displayRanking();
void exitSystem();

int main() {
    if (!checkPassword()) {
        return 0;
    }

    char choice;
    do {
        displayMainMenu();
        choice = getch();

        switch (tolower(choice)) {
            case 'a': enterGrades(); break;
            case 'b': displayAllGrades(); break;
            case 'c': searchStudent(); break;
            case 'd': displayRanking(); break;
            case 'e': exitSystem(); break;
            default:
                printf("\n無效的選項，請重新選擇！\n");
                printf("按任意鍵繼續...");
                getch();
                break;
        }
    } while (1);

    return 0;
}

void displayWelcomeScreen() {
    clearScreen();
    printf("\n");
    printf("***************************************\n");
    printf("*                                     *\n");
    printf("*           歡迎使用學生成績系統          *\n");
    printf("*                                     *\n");
    printf("*   ██████╗ █████╗ ██████╗ ███████╗  *\n");
    printf("*  ██╔════╝██╔══██╗██╔══██╗██╔════╝  *\n");
    printf("*  ██║     ███████║██║  ██║█████╗    *\n");
    printf("*  ██║     ██╔══██║██║  ██║██╔══╝    *\n");
    printf("*  ╚██████╗██║  ██║██████╔╝███████╗  *\n");
    printf("*   ╚═════╝╚═╝  ╚═╝╚═════╝ ╚══════╝  *\n");
    printf("*                                     *\n");
    printf("***************************************\n\n");
}

int checkPassword() {
    int attempts = 0;
    int inputPassword;

    do {
        displayWelcomeScreen();
        printf("請輸入 4 位數密碼：");

        if (scanf("%d", &inputPassword) != 1) {
            while (getchar() != '\n'); // 清除輸入緩衝區
            printf("\n[錯誤] 無效的輸入，請輸入數字！\n");
            attempts++;
            printf("\n按任意鍵繼續...");
            getch();
            continue;
        }

        if (inputPassword == PASSWORD) {
            printf("\n[成功] 密碼正確，歡迎使用本系統！\n");
            printf("\n按任意鍵繼續...");
            getch();
            return 1;
        } else {
            attempts++;
            printf("\n[錯誤] 密碼錯誤，您還有 %d 次嘗試機會。\n", 3 - attempts);
            printf("\n按任意鍵繼續...");
            getch();
        }
    } while (attempts < 3);

    printf("\n[警告] 您已連續三次輸入錯誤密碼，系統即將關閉。\n");
    return 0;
}

void clearScreen() {
    system("cls"); // Windows
    // system("clear"); // Linux/Mac 若需要可換用
}

void displayMainMenu() {
    clearScreen();
    printf("\n------------[學生成績管理系統]----------\n");
    printf("| a. 輸入學生成績                     |\n");
    printf("| b. 顯示所有學生成績                 |\n");
    printf("| c. 搜尋學生成績                     |\n");
    printf("| d. 顯示學生成績排名                 |\n");
    printf("| e. 離開系統                        |\n");
    printf("--------------------------------------\n");
    printf("請選擇一個選項 (a-e): ");
}

int inputIntInRange(const char *prompt, int min, int max) {
    int value;
    while (1) {
        printf("%s", prompt);
        if (scanf("%d", &value) != 1) {
            printf("❌ 輸入無效，請輸入整數！\n");
            while (getchar() != '\n');
            continue;
        }
        if (value < min || value > max) {
            printf("⚠️ 請輸入介於 %d 到 %d 之間的數字！\n", min, max);
        } else {
            break;
        }
    }
    while (getchar() != '\n');
    return value;
}

int isDuplicateID(int id) {
    for (int i = 0; i < studentCount; i++) {
        if (students[i].id == id) return 1;
    }
    return 0;
}

void enterGrades() {
    clearScreen();
    printf("\n--- 輸入學生成績 ---\n");

    int n = inputIntInRange("請輸入學生人數 (5-10): ", 5, 10);
    if (studentCount + n > MAX_STUDENTS) {
        printf("⚠️ 無法新增 %d 位學生，超出總容量 %d 人。\n", n, MAX_STUDENTS);
        printf("按任意鍵返回主選單...");
        getch();
        return;
    }

    for (int i = 0; i < n; i++) {
        printf("\n--- 學生 %d ---\n", studentCount + 1);

        printf("姓名: ");
        getchar();  // 吃掉前一個換行符
        fgets(students[studentCount].name, sizeof(students[studentCount].name), stdin);
        students[studentCount].name[strcspn(students[studentCount].name, "\n")] = '\0';

        int id;
        do {
            id = inputIntInRange("學號 (6位數): ", 100000, 999999);
            if (isDuplicateID(id)) {
                printf("❌ 此學號已存在，請重新輸入！\n");
            }
        } while (isDuplicateID(id));
        students[studentCount].id = id;

        students[studentCount].math = inputIntInRange("數學成績 (0-100): ", 0, 100);
        students[studentCount].physics = inputIntInRange("物理成績 (0-100): ", 0, 100);
        students[studentCount].english = inputIntInRange("英文成績 (0-100): ", 0, 100);

        students[studentCount].average = (students[studentCount].math + students[studentCount].physics + students[studentCount].english) / 3.0;

        studentCount++;
    }

    printf("\n✅ 所有學生資料已輸入完成！\n");
    printf("按任意鍵返回主選單...");
    getch();
}

void displayAllGrades() {
    clearScreen();
    printf("\n--- 所有學生成績 ---\n");

    if (studentCount == 0) {
        printf("目前沒有學生資料！\n");
    } else {
        printf("%-10s %-10s %-8s %-8s %-8s %-8s\n", "姓名", "學號", "數學", "物理", "英文", "平均");
        printf("------------------------------------------------\n");

        for (int i = 0; i < studentCount; i++) {
            printf("%-10s %-10d %-8d %-8d %-8d %-8.1f\n",
                   students[i].name,
                   students[i].id,
                   students[i].math,
                   students[i].physics,
                   students[i].english,
                   students[i].average);
        }
    }

    printf("\n按任意鍵返回主選單...");
    getch();
}

void searchStudent() {
    clearScreen();
    printf("\n--- 搜尋學生成績 ---\n");

    if (studentCount == 0) {
        printf("目前沒有學生資料！\n");
        printf("\n按任意鍵返回主選單...");
        getch();
        return;
    }

    char searchName[50];
    while (getchar() != '\n');  // 清除緩衝區
    printf("請輸入要搜尋的學生姓名: ");
    fgets(searchName, sizeof(searchName), stdin);
    searchName[strcspn(searchName, "\n")] = '\0';

    int found = 0;
    printf("\n找到以下學生資料:\n");
    printf("%-10s %-10s %-8s %-8s %-8s %-8s\n", "姓名", "學號", "數學", "物理", "英文", "平均");
    printf("------------------------------------------------\n");

    for (int i = 0; i < studentCount; i++) {
        if (strstr(students[i].name, searchName) != NULL) {
            printf("%-10s %-10d %-8d %-8d %-8d %-8.1f\n",
                   students[i].name,
                   students[i].id,
                   students[i].math,
                   students[i].physics,
                   students[i].english,
                   students[i].average);
            found = 1;
        }
    }

    if (!found) {
        printf("\n找不到姓名含有 '%s' 的學生資料！\n", searchName);
    }

    printf("\n按任意鍵返回主選單...");
    getch();
}

int compareAverageDesc(const void* a, const void* b) {
    const Student* s1 = (const Student*)a;
    const Student* s2 = (const Student*)b;
    if (s1->average < s2->average) return 1;
    else if (s1->average > s2->average) return -1;
    else return 0;
}

void displayRanking() {
    clearScreen();
    printf("\n--- 學生成績排名 ---\n");

    if (studentCount == 0) {
        printf("目前沒有學生資料！\n");
        printf("\n按任意鍵返回主選單...");
        getch();
        return;
    }

    Student sortedStudents[MAX_STUDENTS];
    memcpy(sortedStudents, students, sizeof(Student) * studentCount);

    qsort(sortedStudents, studentCount, sizeof(Student), compareAverageDesc);

    printf("%-5s %-10s %-10s %-8s %-8s %-8s %-8s\n", "名次", "姓名", "學號", "數學", "物理", "英文", "平均");
    printf("----------------------------------------------------------------\n");

    for (int i = 0; i < studentCount; i++) {
        printf("%-5d %-10s %-10d %-8d %-8d %-8d %-8.1f\n",
               i + 1,
               sortedStudents[i].name,
               sortedStudents[i].id,
               sortedStudents[i].math,
               sortedStudents[i].physics,
               sortedStudents[i].english,
               sortedStudents[i].average);
    }

    printf("\n按任意鍵返回主選單...");
    getch();
}

void exitSystem() {
    clearScreen();
    printf("\n是否確定要離開系統？(Y/N): ");
    char confirm = getch();
    if (tolower(confirm) == 'y') {
        printf("\n感謝使用\n");
        exit(0);
    }
}
